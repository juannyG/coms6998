# Use Foundry image as base
FROM ghcr.io/foundry-rs/foundry:latest AS foundry

# # Use Node.js image for the main build
FROM node:20-alpine

# Copy Foundry binaries from the foundry image
COPY --from=foundry /usr/local/bin/forge /usr/local/bin/forge
COPY --from=foundry /usr/local/bin/cast /usr/local/bin/cast
COPY --from=foundry /usr/local/bin/anvil /usr/local/bin/anvil

# Install dependencies and corepack in a single layer
RUN apk update && apk add --no-cache git bash \
    && corepack enable \
    && corepack prepare yarn@3.2.3 --activate

# Set up work directory
WORKDIR /app

# # Copy only package.json and yarn.lock for cache efficiency
# COPY package.json yarn.lock ./

COPY . .

# # Install dependencies
RUN yarn install
RUN git config --global --add safe.directory /app
RUN git submodule update --init --recursive

EXPOSE 3000

ENTRYPOINT [ "/app/entrypoint.sh" ]

# # Ensure entrypoint script is executable
# RUN chmod +x /app/entrypoint.sh

# # Expose ports for the app and local blockchain
# EXPOSE 3000 8545

# No COPY . . here, as code will be mounted via docker-compose volumes
